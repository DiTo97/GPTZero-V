[project]
name = "GPTZero-V"
version = "0.1.0"
description = "heuristic GPTZero for determining the authenticity of images from their metadata"
readme = "README.md"
requires-python = ">=3.10"
authors = [{name = "Federico Minutoli", email = "fede97.minutoli@gmail.com"}]
license = {file = "LICENSE"}
keywords = ["content-authenticity", "heuristic-algorithm", "image-generation", "metadata"]
dependencies = [
  "exif>1,<2",
  "plotly>6",
  "streamlit>1,<2",
]


[dependency-groups]
contrib = [
  "mypy<2",
  "pre-commit<5",
  "setuptools<71",
]


[tool.ruff]
src = ["authenticity", "components"]
exclude = [
  ".git-rewrite",
  ".git",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".tox",
  ".venv",
  ".vscode",
  "build",
  "dist",
  "site-packages",
  "storeroom",
  "venv",
]
indent-width = 4
line-length = 100

[tool.ruff.format]
indent-style = "space"
line-ending = "auto"
quote-style = "double"

[tool.ruff.lint]
select = [
  "ARG",
  "B",
  "C4",
  "EM",
  "EXE",
  "G",
  "I",
  "ICN",
  "NPY",
  "PD",
  "PGH",
  "PIE",
  "PL",
  "PT",
  "PTH",
  "RET",
  "RUF",
  "SIM",
  "T20",
  "UP",
  "YTT",
]
ignore = [
  "B008",
  "ICN001",
  "PD008",
  "PD901",
  "PLR09",
  "PGH004",
  "PLR2004",
  "PLW0603",
  "PTH123",
  "RET504",
  "SIM115",
]

[tool.ruff.lint.isort]
known-first-party = ["authenticity", "components"]
lines-after-imports = 2


[tool.uv]
default-groups = ["contrib"]
